import React, { useEffect, useRef } from 'react';
import './Home.css';

function Home() {



    const cityBlockRef = useRef(null);
    const validationBlockRef = useRef(null);


    useEffect(() => {

        cityBlockRef.current.style.opacity = 0;
        cityBlockRef.current.style.transform = 'translateY(-20px)';
        validationBlockRef.current.style.opacity = 0;
        validationBlockRef.current.style.transform = 'translateY(-20px)';


        setTimeout(() => {
            cityBlockRef.current.style.opacity = 1;
            cityBlockRef.current.style.transform = 'translateY(0)';
            validationBlockRef.current.style.opacity = 1;
            validationBlockRef.current.style.transform = 'translateY(0)';
        }, 100);
    }, []);



    return (
        <div className="container">
            <h1>Представляю свой проект WeatherMap</h1>
            <p>
                Наши метеорологические данные поступают непосредственно из надежного и широко используемого сервиса OpenWeatherMap.
                Этот сервис предоставляет актуальную информацию о погоде по всему миру, объединяя данные от различных источников, включая метеорологические станции, спутники, а также добровольные пользовательские отчеты.
            </p>
            <p>
                OpenWeatherMap предоставляет разнообразные метеорологические данные, такие как температура, влажность,
                скорость ветра, атмосферное давление и многое другое. Этот сервис также предоставляет прогнозы на различные временные периоды,
                что делает его незаменимым инструментом для тех,
                кто интересуется погодой для планирования поездок, спортивных мероприятий,
                или просто для повседневного обновления о текущих погодных условиях.
            </p>
            <div className="flex-container">
                <div ref={cityBlockRef} className="block city-input visible">
                    <h2>Города</h2>
                    <p>
                        <b>Ситуация с городами сделующая:</b>
                        Что бы получить погоду нужно ввести координаты данного города, но что бы получать координаты города по его названию нужен Geolocation API.
                        К сожаленю как я понял он платный, но возможно я ошибаюсь =( <br/>
                        Вообщем я замокал много городов в файле cities.js, там можно посомотреть погоду каких городов можно получить (или просто нажать на кнопку "получить список городов")!
                        Так же, для получения данных нужно предоставить apiKey. Он уже есть все норм, просто предупреждаю что он может откинуться, но вообще он бессрочный (на всякий предупреждаю).
                        Остальное все круто!
                    </p>

                </div>

                <div ref={validationBlockRef} className="block validation visible">
                    <h2>Валидация</h2>
                    <p><b>Валидация в поле ввода просиходит следующим образом:</b>
                    Удаляются все пробелы, первая буква становится заглавной если она прописная. Почему я об этом предупреждаю, потому что есть кейсы типа "RioDeJaneiro"
                        где не только первая буква является заглавной, за регистром отсальныйх буква надо следить.
                        Вообщем это удобно, но дальше оверперформить довольно проблемотично. В любом случае это юзабельно и думаю в реальных кейсах сделали бы то же самое.
                        Оцените по достоинству и юзайте с пользой!
                    </p>

                </div>
            </div>

            <p className="creator-info">
                Этот проект создан учеником Амир Диханбаев IT2-2109.
            </p>
        </div>
    );
}

export default Home;